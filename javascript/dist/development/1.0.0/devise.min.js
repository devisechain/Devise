(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("web3"), require("xmlhttprequest"));
	else if(typeof define === 'function' && define.amd)
		define(["web3", "xmlhttprequest"], factory);
	else if(typeof exports === 'object')
		exports["devise"] = factory(require("web3"), require("xmlhttprequest"));
	else
		root["devise"] = factory(root["Web3"], root["xmlhttprequest"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_web3__, __WEBPACK_EXTERNAL_MODULE_xmlhttprequest__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./devise/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./devise/base.js":
/*!************************!*\
  !*** ./devise/base.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Base classes BaseEthereumClient, BaseDeviseClient and related functions\n * Copyright(c) 2018 Pit.AI Technologies\n * LICENSE: GPLv3\n */\n\n// Node.js doesn't have XHR, shim it\nif (typeof XMLHttpRequest === 'undefined') {\n    global.XMLHttpRequest = __webpack_require__(/*! xmlhttprequest */ \"xmlhttprequest\").XMLHttpRequest;\n}\n\nlet Web3 = __webpack_require__(/*! web3 */ \"web3\");\nconst assert = __webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\");\nconst ETHER_PRECISION = 10 ** 18;\n\n// The following code is to accommodate using jQuery in Node.js\nconst GITHUB_USERNAME = 'devisechain';\nconst REPO_VERSION = 'bd9251f564a672e8f4f01ddd7239297b2ef88dda';\nconst CDN_ROOT = 'https://cdn.jsdelivr.net/gh/' + GITHUB_USERNAME + '/Devise@' + REPO_VERSION + '/config/';\nconst CONFIG_URL = 'https://config.devisefoundation.org/config.json';\n\nconst get_json_sync = function (url) {\n    let res;\n    const request = new XMLHttpRequest();\n    request.open('GET', url, false); // `false` makes the request synchronous\n    request.send(null);\n\n    if (request.status === 200) {\n        return JSON.parse(request.responseText);\n    }\n};\n\nconst get_contract_abi = function (contractName) {\n    const url = CDN_ROOT + 'abi/' + contractName + '.json';\n    const data = get_json_sync(url);\n    return data;\n};\n\nconst get_contract_address = function () {\n    const config = get_json_sync(CONFIG_URL);\n    return config[\"CONTRACT_ADDRESSES\"];\n};\n\nconst get_default_node_url = function (network = 'MAINNET') {\n    const config = get_json_sync(CONFIG_URL);\n    return config[\"NETWORK_TO_NODE\"][network.toUpperCase()];\n};\n\nclass BaseEthereumClient {\n    /**\n     * Constructor\n     * @param account default: none, optional address to query the smart contract as\n     * @param node_url default: auto, optional ethereum node from which to query smart contract information\n     * @param network default: MainNet, optional network to connect to\n     */\n    constructor(account, node_url, network) {\n        if (!network) {\n            network = 'MAINNET';\n        }\n        node_url = node_url || get_default_node_url(network);\n        account = account || '0x0000000000000000000000000000000000000000';\n        const provider = new Web3.providers.HttpProvider(node_url);\n        this.web3 = new Web3(provider);\n        assert(this.web3.eth.net, \"Please use a version of web3.js >= 1.0.0.\");\n\n        this.account = account;\n        this.address = this.account;\n    }\n\n    async _get_network_id() {\n        const id = await this.web3.eth.net.getId();\n        return id;\n    }\n\n    async get_eth_balance(address) {\n        if (address === undefined) return 0;\n        const bal = (await this.web3.eth.getBalance(address)) / ETHER_PRECISION;\n        return bal;\n    }\n\n}\n\nclass BaseDeviseClient extends BaseEthereumClient {\n    constructor(account, node_url, network) {\n        super(account, node_url, network);\n    }\n\n    async init_contracts() {\n        const token_abi = get_contract_abi('devise_token');\n        const token_sale_abi = get_contract_abi('devise_token_sale');\n        const rental_abi = get_contract_abi('devise_rental_proxy');\n        const contract_address = get_contract_address();\n        const network_id = await this._get_network_id();\n        this._token_contract = new this.web3.eth.Contract(token_abi, contract_address[network_id].DEVISE_TOKEN);\n        this._token_sale_contract = new this.web3.eth.Contract(token_sale_abi, contract_address[network_id].DEVISE_TOKEN_SALE);\n        this._rental_contract = new this.web3.eth.Contract(rental_abi, contract_address[network_id].DEVISE_RENTAL);\n    }\n}\n\nmodule.exports = { BaseEthereumClient, BaseDeviseClient, get_json_sync };\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://devise/./devise/base.js?");

/***/ }),

/***/ "./devise/clients/client.js":
/*!**********************************!*\
  !*** ./devise/clients/client.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * DeviseClient class\n * Copyright(c) 2018 Pit.AI Technologies\n * LICENSE: GPLv3\n */\nconst aggregation = __webpack_require__(/*! aggregation/es6 */ \"./node_modules/aggregation/es6.js\");\nconst DeviseToken = __webpack_require__(/*! ./token */ \"./devise/clients/token.js\");\nconst TokenSale = __webpack_require__(/*! ./token_sale */ \"./devise/clients/token_sale.js\");\nconst RentalContract = __webpack_require__(/*! ./contract */ \"./devise/clients/contract.js\");\n\n/*\n * DeviseClient\n * This is the basic wrapper class around all Devise client facing operations. This wrapper connects to an Ethereum\n * node and facilitates smart contract operations such as provision, leaseAll, getBalance, etc.\n */\nclass DeviseClient extends aggregation(DeviseToken, TokenSale, RentalContract) {\n  /**\n   * Constructor\n   * @param account default: none, optional address to query the smart contract as\n   * @param nodel_url default: auto, optional ethereum node from which to query smart contract information\n   * @param network default: MainNet, optional network to connect to\n   */\n  constructor(account, node_url, network) {\n    super(account, node_url, network);\n  }\n}\n\nmodule.exports = DeviseClient;\n\n//# sourceURL=webpack://devise/./devise/clients/client.js?");

/***/ }),

/***/ "./devise/clients/contract.js":
/*!************************************!*\
  !*** ./devise/clients/contract.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * RentalContract class\n * Copyright(c) 2018 Pit.AI Technologies\n * LICENSE: GPLv3\n */\nconst BaseClient = __webpack_require__(/*! ../base */ \"./devise/base.js\");\nconst BaseDeviseClient = BaseClient.BaseDeviseClient;\nconst IU_PRECISION = 10 ** 6;\nconst TOKEN_PRECISION = 10 ** 6;\nconst ETHER_PRECISION = 10 ** 18;\n\n/*\n * RentalContract\n * This is the basic wrapper class around the Devise rental smart contract client facing operations.\n * This wrapper connects to an Ethereum node and facilitates rental smart contract operations such as provision,\n * leaseAll, getClientSummary, etc.\n */\nclass RentalContract extends BaseDeviseClient {\n    /**\n     * Constructor\n     * @param account default: none, optional address to query the smart contract as\n     * @param node_url default: auto, optional Ethereum node from which to query smart contract information\n     * @param network default: MainNet, optional network to connect to\n     */\n    constructor(account, node_url, network) {\n        super(account, node_url, network);\n    }\n\n    /**\n     * Verifies that the client's escrow balance on the rental smart contract is sufficient to cover the number of seats\n     * and limit price specified at the current total incremental usefulness\n     * @param client_address The address for which to get the current escrow balance\n     * @param num_seats The number of seats to use for the comparison\n     * @param limit_price The limit price to use for the comparison\n     * @returns {Promise<boolean>}\n     * @private\n     */\n    async _has_sufficient_funds(client_address, num_seats, limit_price) {\n        const current_balance = (await this._rental_contract.methods.getAllowance().call({ from: client_address })) / TOKEN_PRECISION;\n        return limit_price * this.total_incremental_usefulness() * num_seats <= current_balance;\n    }\n\n    /**\n     * Finds the client address for a beneficiary if the address provided is a beneficiary\n     * @param address a beneficiary address\n     * @returns {Promise<string>} The client address if any\n     */\n    async get_client_address(address) {\n        const client_address = await this._rental_contract.methods.getClientForBeneficiary().call({ from: address });\n        if (client_address !== '0x0000000000000000000000000000000000000000') return client_address;\n    }\n\n    /**\n     * Queries the DeviseToken contract for the token balance of the current account\n     * @returns {Promise<number>}\n     */\n    async dvz_balance() {\n        return (await this._token_contract.methods.balanceOf(this.address).call({ from: this.address })) / TOKEN_PRECISION;\n    }\n\n    /**\n     * Queries and returns the Ether balance of the given address\n     * @returns {Promise<number>}\n     */\n    async eth_balance() {\n        if (this.address === undefined) return 0;\n        return (await this.web3.eth.getBalance(this.address)) / ETHER_PRECISION;\n    }\n\n    /**\n     * Queries the Devise rental contract for the number of tokens provisioned into the rental contract for this account\n     * @returns {Promise<number>}\n     */\n    async dvz_balance_escrow() {\n        return (await this._rental_contract.methods.getAllowance().call({ from: this.address })) / TOKEN_PRECISION;\n    }\n\n    /**\n     * Queries the Devise rental contract for the rent per seat for the current lease term\n     * @returns {Promise<number>}\n     */\n    async rent_per_seat_current_term() {\n        return (await this._rental_contract.methods.getRentPerSeatCurrentTerm().call()) / TOKEN_PRECISION;\n    }\n\n    /**\n     * Queries the Devise rental contract for the indicative rent per seat for the next lease term\n     * @returns {Promise<number>}\n     */\n    async indicative_rent_per_seat_next_term() {\n        return (await this._rental_contract.methods.getIndicativeRentPerSeatNextTerm().call()) / TOKEN_PRECISION;\n    }\n\n    /**\n     * Returns the current lease term per the smart contract as a string (for example 8/2018)\n     * @returns {Promise<string>}\n     */\n    async current_lease_term() {\n        const idx = await this._rental_contract.methods.getCurrentLeaseTerm().call();\n        return this._lease_term_to_date_str(idx);\n    }\n\n    /**\n     * Converts numerical index based lease term to corresponding month/year string\n     * @param lease_term_idx\n     * @returns {*}\n     * @private\n     */\n    _lease_term_to_date_str(lease_term_idx) {\n        if (lease_term_idx === 0) return undefined;\n\n        let term_year = 2018;\n        while (lease_term_idx > 12) {\n            term_year++;\n            lease_term_idx -= 12;\n        }\n        lease_term_idx++;\n        return lease_term_idx.toString() + '/' + term_year.toString();\n    }\n\n    /**\n     * Gets the current price per bit from the smart contract for the current lease term\n     * @returns {Promise<number>}\n     */\n    async price_per_bit_current_term() {\n        return (await this._rental_contract.methods.getPricePerBitCurrentTerm().call()) / TOKEN_PRECISION;\n    }\n\n    /**\n     * Gets the indicative price per bit from the smart contract for the next lease term\n     * @returns {Promise<number>}\n     */\n    async indicative_price_per_bit_next_term() {\n        return (await this._rental_contract.methods.getIndicativePricePerBitNextTerm().call()) / TOKEN_PRECISION;\n    }\n\n    /**\n     * Checks if the current client specified in the constructor is a power user\n     * @returns {Promise<bool>}\n     */\n    is_power_user() {\n        return this._rental_contract.methods.isPowerUser().call({ from: this.address });\n    }\n\n    /**\n     * Returns the beneficiary address for the client specified in the constructor if any\n     * @returns {Promise<string>}\n     */\n    beneficiary() {\n        if (this.address === undefined) return Promise().resolve('0x0000000000000000000000000000000000000000');\n        return this._rental_contract.methods.getBeneficiary().call({ from: this.address });\n    }\n\n    /**\n     * Returns the Total Incremental Usefulness of all the leptons added to the chain\n     * @returns {Promise<number>}\n     */\n    async total_incremental_usefulness() {\n        return (await this._rental_contract.methods.getTotalIncrementalUsefulness().call()) / IU_PRECISION;\n    }\n\n    /**\n     * Returns the current number of seats available for lease\n     * @returns {Promise<number>}\n     */\n    async seats_available() {\n        const seats = await this._rental_contract.methods.getSeatsAvailable().call();\n        return parseInt(seats);\n    }\n\n    /**\n     * Returns the total number of seats leased in the current lease term\n     * @returns {Promise<number>}\n     */\n    async current_term_seats() {\n        const client = await this.get_client_address(this.address);\n        if (typeof client === 'undefined') return 0;\n        return this._rental_contract.methods.getCurrentTermSeats().call({ from: client });\n    }\n\n    /**\n     * Returns the indicative total number of seats leased in the next lease term\n     * @returns {Promise<number>}\n     */\n    async next_term_seats() {\n        const client = await this.get_client_address(this.address);\n        if (typeof client === 'undefined') return 0;\n        return this._rental_contract.methods.getNextTermSeats().call({ from: client });\n    }\n\n    /**\n     * Returns an object containing a complete summary of the current client, including: escrow balance, DVZ balance,\n     * beneficiary address, current term seats, indicative next term seats, power user status, and historical data\n     * access status\n     * @returns {Promise<object>}\n     */\n    async client_summary() {\n        let summary;\n        try {\n            summary = await this.get_client_summary(this.address);\n        } catch (err) {\n            console.log(\"No client found for address %s\", this.address);\n            return;\n        }\n        return summary;\n    }\n\n    /**\n     * Returns and hashes and incremental usefulness of all the leptons added to the chain\n     * @returns {Promise<Array>}\n     */\n    async get_all_leptons() {\n        const all_leptons = await this._rental_contract.methods.getAllLeptons().call();\n        const count = await this._rental_contract.methods.getNumberOfLeptons().call();\n        let leptons = [];\n        let prev_hash;\n        for (let i = 0; i < all_leptons[0].length; i++) {\n            const lepton_hash = all_leptons[0][i];\n            const contract_iu = all_leptons[1][i];\n            leptons.push({\n                hash: lepton_hash,\n                previous_hash: prev_hash,\n                incremental_usefulness: contract_iu / IU_PRECISION\n            });\n            prev_hash = lepton_hash;\n        }\n        return leptons;\n    }\n\n    /**\n     * Get account summaries of all the addresses that have ever provisioned tokens.\n     * @returns {Promise<Array>}\n     */\n    async get_all_clients() {\n        const clientAddresses = await this._rental_contract.methods.getAllClients().call();\n        let clients = [];\n        for (let i = 0; i < clientAddresses.length; i++) {\n            const summary = await this.get_client_summary(clientAddresses[i]);\n            clients.push(summary);\n        }\n        return clients;\n    }\n\n    /**\n     * Get renter account summaries of all current lease term renters from the smart contract\n     * @returns {Promise<Array>}\n     */\n    async get_all_renters() {\n        const renterAddresses = await this._rental_contract.methods.getAllRenters().call();\n        let renters = [];\n        for (let i = 0; i < renterAddresses.length; i++) {\n            const summary = await this.get_client_summary(renterAddresses[i]);\n            renters.push(summary);\n        }\n        return renters;\n    }\n\n    /**\n     * Returns an object containing a complete summary of the client specified, including: escrow balance, DVZ balance,\n     * beneficiary address, current term seats, indicative next term seats, power user status, and historical data\n     * access status\n     */\n    async get_client_summary(clientAddress) {\n        const summary = await this._rental_contract.methods.getClientSummary(clientAddress).call();\n        let res = {};\n        res['client'] = clientAddress;\n        res['beneficiary'] = summary['0'];\n        res['dvz_balance_escrow'] = summary['1'] / TOKEN_PRECISION;\n        res['dvz_balance'] = summary['2'] / TOKEN_PRECISION;\n        res['last_term_paid'] = this._lease_term_to_date_str(summary['3']);\n        res['power_user'] = summary['4'];\n        res['historical_data_access'] = summary['5'];\n        res['current_term_seats'] = summary['6'];\n        res['indicative_next_term_seats'] = summary['7'];\n        return res;\n    }\n\n    /**\n     * Gets a list of all the bids including address, number of seats requested, and limit price\n     * @param active Only return bidders with sufficient token balances to participate in auction\n     * @returns {Promise<Array>}\n     */\n    async get_all_bidders(active = false) {\n        let bids = [];\n        const all_bidders = await this._rental_contract.methods.getAllBidders().call();\n\n        for (let i = 0; i < all_bidders[0].length; i++) {\n            if (all_bidders[0][i] === \"0x0000000000000000000000000000000000000000\") {\n                continue;\n            }\n            if (!active || this._has_sufficient_funds(all_bidders[0][i], all_bidders[1][i], all_bidders[2][i] / TOKEN_PRECISION)) bids.push({\n                address: all_bidders[0][i],\n                requested_seats: all_bidders[1][i],\n                limit_price: all_bidders[2][i] / TOKEN_PRECISION\n            });\n        }\n        return bids;\n    }\n\n    async get_owner_eth_balance() {\n        const owner = await this._rental_contract.methods.owner().call();\n        return await this.get_eth_balance(owner);\n    }\n\n    async get_escrow_wallet_address() {\n        return await this._rental_contract.methods.escrowWallet().call();\n    }\n\n    async get_revenue_wallet_address() {\n        return await this._rental_contract.methods.revenueWallet().call();\n    }\n\n    async balance_of_escrow_wallet() {\n        const escrow = await this.get_escrow_wallet_address();\n        return (await this._token_contract.methods.balanceOf(escrow).call()) / TOKEN_PRECISION;\n    }\n\n    async balance_of_revenue_wallet() {\n        const revenue = await this.get_revenue_wallet_address();\n        return (await this._token_contract.methods.balanceOf(revenue).call()) / TOKEN_PRECISION;\n    }\n\n    async get_all_implementations() {\n        const res = await this._rental_contract.methods.getAllImplementations().call();\n        return res[1].map((ver, idx) => {\n            let obj = {};\n            obj[\"ver\"] = parseInt(ver);\n            obj[\"impl\"] = res[0][idx];\n            return obj;\n        });\n    }\n}\n\nmodule.exports = RentalContract;\n\n//# sourceURL=webpack://devise/./devise/clients/contract.js?");

/***/ }),

/***/ "./devise/clients/token.js":
/*!*********************************!*\
  !*** ./devise/clients/token.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * DeviseToken class\n * Copyright(c) 2018 Pit.AI Technologies\n * LICENSE: GPLv3\n */\nconst BaseClient = __webpack_require__(/*! ../base */ \"./devise/base.js\");\nconst BaseDeviseClient = BaseClient.BaseDeviseClient;\nconst TOKEN_PRECISION = 10 ** 6;\n\n/**\n * DeviseToken\n * This is the base class for all token contract operations\n */\nclass DeviseToken extends BaseDeviseClient {\n  constructor(account, node_url, network) {\n    super(account, node_url, network);\n  }\n\n  /**\n   * The global cap on how many DVZ tokens can be minted\n   * @returns {Promise<number>}\n   */\n  async cap() {\n    return (await this._token_contract.methods.cap().call()) / TOKEN_PRECISION;\n  }\n\n  /**\n   * The current number of DVZ Tokens in circulation\n   * @returns {Promise<number>}\n   */\n  async total_supply() {\n    return (await this._token_contract.methods.totalSupply().call()) / TOKEN_PRECISION;\n  }\n\n  /**\n   *\n   * @param owner\n   * @param spender\n   * @returns {Promise<number>}\n   */\n  async allowance(owner, spender) {\n    return (await this._token_contract.methods.allowance(owner, spender).call()) / TOKEN_PRECISION;\n  }\n\n  /**\n   * Query the DVZ token balance the specified address\n   * @param address\n   * @returns {Promise<number>}\n   */\n  async balance_of(address) {\n    return (await this._token_contract.methods.balanceOf(address).call()) / TOKEN_PRECISION;\n  }\n\n  /**\n   * Utility function to query the DVZ token balance of the token sale wallet\n   * @returns {Promise<number>}\n   */\n  async balance_of_token_wallet() {\n    const owner = await this._token_sale_contract.methods.tokenWallet().call();\n    return await this.balance_of(owner);\n  }\n\n  /**\n   * Utility function to query the allowance of the token sale contract\n   * @returns {Promise<number>}\n   */\n  async allowance_of_token_sale_contract() {\n    const owner = await this._token_sale_contract.methods.tokenWallet().call();\n    const spender = await this._token_sale_contract._address;\n    return await this.allowance(owner, spender);\n  }\n\n  /**\n   * Utility function to query the Ether balance of the contract owner\n   * @returns {Promise<number|*>}\n   */\n  async get_owner_eth_balance() {\n    const owner = await this._token_contract.methods.owner().call();\n    return await this.get_eth_balance(owner);\n  }\n}\n\nmodule.exports = DeviseToken;\n\n//# sourceURL=webpack://devise/./devise/clients/token.js?");

/***/ }),

/***/ "./devise/clients/token_sale.js":
/*!**************************************!*\
  !*** ./devise/clients/token_sale.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * TokenSale class\n * Copyright(c) 2018 Pit.AI Technologies\n * LICENSE: GPLv3\n */\nconst BaseClient = __webpack_require__(/*! ../base */ \"./devise/base.js\");\nconst BaseDeviseClient = BaseClient.BaseDeviseClient;\nconst get_json_sync = BaseClient.get_json_sync;\nconst TOKEN_PRECISION = 10 ** 6;\nconst MILLI_SECOND = 10 ** 3;\n\n/**\n * TokenSale\n * This is the base class for all token sale contract operations\n */\nclass TokenSale extends BaseDeviseClient {\n    constructor(account, node_url, network) {\n        super(account, node_url, network);\n    }\n\n    /**\n     * Get the start of the token sale from the contract\n     * @returns {Promise<Date>}\n     */\n    async opening_time() {\n        const timestamp = await this._token_sale_contract.methods.openingTime().call();\n        return new Date(timestamp * MILLI_SECOND);\n    }\n\n    /**\n     * Get the end of the token sale from the contract\n     * @returns {Promise<Date>}\n     */\n    async closing_time() {\n        const timestamp = await this._token_sale_contract.methods.closingTime().call();\n        return new Date(timestamp * MILLI_SECOND);\n    }\n\n    /**\n     * Get the current conversion rate from Ether to DVZ tokens\n     * @returns {Promise<number>}\n     */\n    async eth_dvz_rate() {\n        const rate = await this._token_sale_contract.methods.getCurrentRate().call();\n        return parseInt(rate);\n    }\n\n    /**\n     * Estimate the current number of tokens per USD based on current Ether to USD prices\n     * @returns {Promise<number>}\n     */\n    async usd_dvz_rate() {\n        const data = get_json_sync(\"https://api.gdax.com/products/ETH-USD/ticker\");\n        const prc = parseInt(data['price']);\n        const eth_rate = await this.eth_dvz_rate();\n        const usd_rate = eth_rate / prc;\n        return usd_rate;\n    }\n\n    /**\n     * Check if this token sale has closed\n     * @returns {Promise<bool>}\n     */\n    has_closed() {\n        return this._token_sale_contract.methods.hasClosed().call();\n    }\n\n    /**\n     * Check for the remaining DVZ tokens available for sale\n     * @returns {Promise<number>}\n     */\n    async remaining_tokens() {\n        const rem = await this._token_sale_contract.methods.remainingTokens().call();\n        return rem / TOKEN_PRECISION;\n    }\n\n    _has_min_order_size(ethers) {\n        return this._token_sale_contract.methods.hasMinimumOrderSize(this.web3.toWei(ethers, \"ether\"));\n    }\n\n    /**\n     * Calculate Ether cost to obtain a number of DVZ Tokens\n     * @param dvz The number of DVZ tokens\n     * @returns {Promise<number>}\n     */\n    async ether_cost(dvz) {\n        const rate = await this.eth_dvz_rate();\n        return dvz / rate + 1 / (rate * TOKEN_PRECISION);\n    }\n\n    /**\n     * Check if the client specified is whitelisted on the contract to purchase DVZ Tokens\n     * @param client\n     * @returns {Promise<bool>}\n     */\n    is_on_white_list(client) {\n        return this._token_sale_contract.methods.whitelist(client).call();\n    }\n\n    /**\n     * Utility function to query the Ether balance of the contract owner\n     * @returns {Promise<number>}\n     */\n    async get_owner_eth_balance() {\n        const owner = await this._token_sale_contract.methods.owner().call();\n        return await this.get_eth_balance(owner);\n    }\n\n    /**\n     * Query the address of the token wallet from which DVZ Tokens are sold by this token sale contract\n     * @returns {Promise<string>}\n     */\n    async get_wallet() {\n        return await this._token_sale_contract.methods.wallet().call();\n    }\n}\n\nmodule.exports = TokenSale;\n\n//# sourceURL=webpack://devise/./devise/clients/token_sale.js?");

/***/ }),

/***/ "./devise/index.js":
/*!*************************!*\
  !*** ./devise/index.js ***!
  \*************************/
/*! exports provided: DeviseClient, DeviseTokenOwner, MasterNode, DeviseOwner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _clients_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clients/client */ \"./devise/clients/client.js\");\n/* harmony import */ var _clients_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_clients_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, \"DeviseClient\", function() { return _clients_client__WEBPACK_IMPORTED_MODULE_0___default.a; });\n/* harmony import */ var _owner_token_owner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./owner/token_owner */ \"./devise/owner/token_owner.js\");\n/* harmony import */ var _owner_token_owner__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_owner_token_owner__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, \"DeviseTokenOwner\", function() { return _owner_token_owner__WEBPACK_IMPORTED_MODULE_1___default.a; });\n/* harmony import */ var _miners_master_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./miners/master_node */ \"./devise/miners/master_node.js\");\n/* harmony import */ var _miners_master_node__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_miners_master_node__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, \"MasterNode\", function() { return _miners_master_node__WEBPACK_IMPORTED_MODULE_2___default.a; });\n/* harmony import */ var _owner_owner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./owner/owner */ \"./devise/owner/owner.js\");\n/* harmony import */ var _owner_owner__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_owner_owner__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, \"DeviseOwner\", function() { return _owner_owner__WEBPACK_IMPORTED_MODULE_3___default.a; });\n/*!\n * devise\n * Copyright(c) 2018 Pit.AI Technologies\n * LICENSE: GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007\n *\n *  ES5 Example Usage:\n *      var client = new devise.DeviseClient(account);\n *      client.init_contracts().then(() => {\n *        client.client_summary().then(summary => console.log(summary));\n *      });\n\n *  Async/Await Example Usage:\n *      const client = new devise.DeviseClient(account);\n *      await client.init_contracts();\n *      const client_summary = await client.client_summary();\n *      console.log(client_summary);\n */\n\n\n\n\n\n\n/**\n * Polyfill for environments without XHR\n */\nif (typeof XMLHttpRequest === 'undefined') {\n  global.XMLHttpRequest = __webpack_require__(/*! xmlhttprequest */ \"xmlhttprequest\").XMLHttpRequest;\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://devise/./devise/index.js?");

/***/ }),

/***/ "./devise/miners/master_node.js":
/*!**************************************!*\
  !*** ./devise/miners/master_node.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * MasterNode class\n * Copyright(c) 2018 Pit.AI Technologies\n * LICENSE: GPLv3\n */\nconst BaseClient = __webpack_require__(/*! ../base */ \"./devise/base.js\");\nconst BaseDeviseClient = BaseClient.BaseDeviseClient;\nconst IU_PRECISION = 10 ** 6;\n\n/**\n * MasterNode\n * Smart Contract wrapper class for Master Node operations\n */\nclass MasterNode extends BaseDeviseClient {\n    constructor(account, node_url, network) {\n        super(account, node_url, network);\n    }\n\n    get_master_nodes() {\n        return this._rental_contract.methods.getMasterNodes().call();\n    }\n}\n\nmodule.exports = MasterNode;\n\n//# sourceURL=webpack://devise/./devise/miners/master_node.js?");

/***/ }),

/***/ "./devise/owner/owner.js":
/*!*******************************!*\
  !*** ./devise/owner/owner.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const BaseClient = __webpack_require__(/*! ../base */ \"./devise/base.js\");\nconst BaseDeviseClient = BaseClient.BaseDeviseClient;\nconst IU_PRECISION = 10 ** 6;\nconst TOKEN_PRECISION = 10 ** 6;\nconst ETHER_PRECISION = 10 ** 18;\n\nclass DeviseOwner extends BaseDeviseClient {\n    constructor(account, node_url, network) {\n        super(account, node_url, network);\n    }\n\n    async get_implementation() {\n        return await this._rental_contract.methods.implementation().call();\n    }\n\n    async get_version() {\n        return await this._rental_contract.methods.version().call();\n    }\n\n    async get_escrow_history() {\n        const res = await this._rental_contract.methods.getEscrowHistory().call();\n        return res;\n    }\n\n    async get_escrow_version() {\n        const hist = await this.get_escrow_history();\n        return hist.length;\n    }\n\n    async get_revenue_history() {\n        const res = await this._rental_contract.methods.getRevenueHistory().call();\n        return res;\n    }\n\n    async get_revenue_version() {\n        const hist = await this.get_revenue_history();\n        return hist.length;\n    }\n}\n\nmodule.exports = DeviseOwner;\n\n//# sourceURL=webpack://devise/./devise/owner/owner.js?");

/***/ }),

/***/ "./devise/owner/token_owner.js":
/*!*************************************!*\
  !*** ./devise/owner/token_owner.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * DeviseTokenOwner class\n * Copyright(c) 2018 Pit.AI Technologies\n * LICENSE: GPLv3\n */\nconst DeviseToken = __webpack_require__(/*! ../clients/token */ \"./devise/clients/token.js\");\n\n/**\n * DeviseTokenOwner\n * Smart Contract wrapper class for Token Owner operations\n */\nclass DeviseTokenOwner extends DeviseToken {\n    constructor(account, nodel_url, network) {\n        super(account, nodel_url, network);\n    }\n\n    async get_minters() {\n        let minters = [];\n        const owner = await this._token_contract.methods.owner().call();\n        const n = await this._token_contract.methods.getNumberOfMinters().call({ from: owner });\n        for (let i = 0; i < n; i++) {\n            const minter = await this._token_contract.methods.getMinter(i).call({ from: owner });\n            minters.push(minter);\n        }\n        return minters;\n    }\n}\n\nmodule.exports = DeviseTokenOwner;\n\n//# sourceURL=webpack://devise/./devise/owner/token_owner.js?");

/***/ }),

/***/ "./node_modules/aggregation/es6.js":
/*!*****************************************!*\
  !*** ./node_modules/aggregation/es6.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nmodule.exports = __webpack_require__(/*! ./src/aggregation-es6.js */ \"./node_modules/aggregation/src/aggregation-es6.js\")\n\n\n\n//# sourceURL=webpack://devise/./node_modules/aggregation/es6.js?");

/***/ }),

/***/ "./node_modules/aggregation/src/aggregation-es6.js":
/*!*********************************************************!*\
  !*** ./node_modules/aggregation/src/aggregation-es6.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n**  Aggregation -- Aggregation of Base Class and Mixin Classes\n**  Copyright (c) 2015-2018 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  ==== ECMAScript 6 variant ====  */\n\nvar aggregation = (base, ...mixins) => {\n\n    /*  create aggregation class  */\n    let aggregate = class __Aggregate extends base {\n        constructor (...args) {\n            /*  call base class constructor  */\n            super(...args)\n\n            /*  call mixin's initializer  */\n            mixins.forEach((mixin) => {\n                if (typeof mixin.prototype.initializer === \"function\")\n                    mixin.prototype.initializer.apply(this, args)\n            })\n        }\n    };\n\n    /*  copy properties  */\n    let copyProps = (target, source) => {\n        Object.getOwnPropertyNames(source)\n            .concat(Object.getOwnPropertySymbols(source))\n            .forEach((prop) => {\n            if (prop.match(/^(?:initializer|constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/))\n                return\n            Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop))\n        })\n    }\n\n    /*  copy all properties of all mixins into aggregation class  */\n    mixins.forEach((mixin) => {\n        copyProps(aggregate.prototype, mixin.prototype)\n        copyProps(aggregate, mixin)\n    })\n\n    return aggregate\n}\n\nmodule.exports = aggregation\n\n\n\n//# sourceURL=webpack://devise/./node_modules/aggregation/src/aggregation-es6.js?");

/***/ }),

/***/ "./node_modules/assert/assert.js":
/*!***************************************!*\
  !*** ./node_modules/assert/assert.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://devise/./node_modules/assert/assert.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack://devise/./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/process/browser.js":
/*!************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/process/browser.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://devise/./node_modules/node-libs-browser/node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack://devise/./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../node-libs-browser/node_modules/process/browser.js */ \"./node_modules/node-libs-browser/node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://devise/./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://devise/(webpack)/buildin/global.js?");

/***/ }),

/***/ "web3":
/*!************************************************************************************!*\
  !*** external {"root":"Web3","commonjs2":"web3","commonjs":["web3"],"amd":"web3"} ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_web3__;\n\n//# sourceURL=webpack://devise/external_%7B%22root%22:%22Web3%22,%22commonjs2%22:%22web3%22,%22commonjs%22:%5B%22web3%22%5D,%22amd%22:%22web3%22%7D?");

/***/ }),

/***/ "xmlhttprequest":
/*!*********************************!*\
  !*** external "xmlhttprequest" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_xmlhttprequest__;\n\n//# sourceURL=webpack://devise/external_%22xmlhttprequest%22?");

/***/ })

/******/ });
});
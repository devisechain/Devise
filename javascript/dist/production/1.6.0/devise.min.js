!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("xmlhttprequest"),require("web3")):"function"==typeof define&&define.amd?define(["xmlhttprequest","web3"],e):"object"==typeof exports?exports.devise=e(require("xmlhttprequest"),require("web3")):t.devise=e(t.xmlhttprequest,t.Web3)}(window,function(t,e){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=8)}([function(t,e,n){(function(e){
/*!
 * Base classes BaseEthereumClient, BaseDeviseClient and related functions
 * Copyright(c) 2018 Pit.AI Technologies
 * LICENSE: GPLv3
 */
"undefined"==typeof XMLHttpRequest&&(e.XMLHttpRequest=n(4).XMLHttpRequest);let r=n(11);const a=1e18,s="https://config.devisefoundation.org/config.json",c=function(t){const e=new XMLHttpRequest;if(e.open("GET",t,!1),e.send(null),200===e.status)return JSON.parse(e.responseText)},o=function(t){return c("https://cdn.jsdelivr.net/gh/devisechain/Devise@bd9251f564a672e8f4f01ddd7239297b2ef88dda/config/abi/"+t+".json")},i=function(){return c(s).CONTRACT_ADDRESSES},l=function(t="MAINNET"){return c(s).NETWORK_TO_NODE[t.toUpperCase()]};class _{constructor(t,e,n){n||(n="MAINNET"),e=e||l(n),t=t||"0x0000000000000000000000000000000000000000";const a=new r.providers.HttpProvider(e);if(this.web3=new r(a),void 0===this.web3.eth.net)throw"Please use a version of web3.js >= 1.0.0.";this.account=t,this.address=this.account}async _get_network_id(){return await this.web3.eth.net.getId()}async get_eth_balance(t){if(void 0===t)return 0;return await this.web3.eth.getBalance(t)/a}}t.exports={BaseEthereumClient:_,BaseDeviseClient:class extends _{constructor(t,e,n){super(t,e,n)}async init_contracts(){const t=o("devise_token");let e=o("devise_rental_proxy");e.push({constant:!0,inputs:[],name:"rateSetter",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"RATE_USD_DVZ",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"rateETHUSD",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"});const n=i(),r=await this._get_network_id();this._token_contract=new this.web3.eth.Contract(t,n[r].DEVISE_TOKEN),this._rental_contract=new this.web3.eth.Contract(e,n[r].DEVISE_RENTAL)}},get_json_sync:c}}).call(this,n(1))},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){
/*!
 * DeviseClient class
 * Copyright(c) 2018 Pit.AI Technologies
 * LICENSE: GPLv3
 */
const r=n(9),a=n(3),s=n(12);t.exports=class extends(r(a,s)){constructor(t,e,n){super(t,e,n)}}},function(t,e,n){
/*!
 * DeviseToken class
 * Copyright(c) 2018 Pit.AI Technologies
 * LICENSE: GPLv3
 */
const r=n(0).BaseDeviseClient,a=1e6;t.exports=class extends r{constructor(t,e,n){super(t,e,n)}async cap(){return await this._token_contract.methods.cap().call()/a}async total_supply(){return await this._token_contract.methods.totalSupply().call()/a}async allowance(t,e){return await this._token_contract.methods.allowance(t,e).call()/a}async balance_of(t){return await this._token_contract.methods.balanceOf(t).call()/a}async balance_of_token_wallet(){const t=await this._rental_contract.methods.tokenWallet().call();return await this.balance_of(t)}async get_owner_eth_balance(){const t=await this._token_contract.methods.owner().call();return await this.get_eth_balance(t)}}},function(e,n){e.exports=t},function(t,e,n){
/*!
 * DeviseTokenOwner class
 * Copyright(c) 2018 Pit.AI Technologies
 * LICENSE: GPLv3
 */
const r=n(3);t.exports=class extends r{constructor(t,e,n){super(t,e,n)}async get_minters(){let t=[];const e=await this._token_contract.methods.owner().call(),n=await this._token_contract.methods.getNumberOfMinters().call({from:e});for(let r=0;r<n;r++){const n=await this._token_contract.methods.getMinter(r).call({from:e});t.push(n)}return t}}},function(t,e,n){
/*!
 * MasterNode class
 * Copyright(c) 2018 Pit.AI Technologies
 * LICENSE: GPLv3
 */
const r=n(0).BaseDeviseClient;t.exports=class extends r{constructor(t,e,n){super(t,e,n)}get_master_nodes(){return this._rental_contract.methods.getMasterNodes().call()}}},function(t,e,n){const r=n(0).BaseDeviseClient;t.exports=class extends r{constructor(t,e,n){super(t,e,n)}async get_implementation(){return await this._rental_contract.methods.implementation().call()}async get_version(){return await this._rental_contract.methods.version().call()}async get_rate_setter(){return await this._rental_contract.methods.rateSetter().call()}async get_escrow_history(){return await this._rental_contract.methods.getEscrowHistory().call()}async get_escrow_version(){return(await this.get_escrow_history()).length}async get_revenue_history(){return await this._rental_contract.methods.getRevenueHistory().call()}async get_revenue_version(){return(await this.get_revenue_history()).length}}},function(t,e,n){"use strict";n.r(e),function(t){var r=n(2),a=n.n(r);n.d(e,"DeviseClient",function(){return a.a});var s=n(5),c=n.n(s);n.d(e,"DeviseTokenOwner",function(){return c.a});var o=n(6),i=n.n(o);n.d(e,"MasterNode",function(){return i.a});var l=n(7),_=n.n(l);n.d(e,"DeviseOwner",function(){return _.a}),
/*!
 * devise
 * Copyright(c) 2018 Pit.AI Technologies
 * LICENSE: GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007
 *
 *  ES5 Example Usage:
 *      var client = new devise.DeviseClient(account);
 *      client.init_contracts().then(() => {
 *        client.client_summary().then(summary => console.log(summary));
 *      });

 *  Async/Await Example Usage:
 *      const client = new devise.DeviseClient(account);
 *      await client.init_contracts();
 *      const client_summary = await client.client_summary();
 *      console.log(client_summary);
 */
"undefined"==typeof XMLHttpRequest&&(t.XMLHttpRequest=n(4).XMLHttpRequest)}.call(this,n(1))},function(t,e,n){t.exports=n(10)},function(t,e){t.exports=((t,...e)=>{let n=class extends t{constructor(...t){super(...t),e.forEach(e=>{"function"==typeof e.prototype.initializer&&e.prototype.initializer.apply(this,t)})}},r=(t,e)=>{Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e)).forEach(n=>{n.match(/^(?:initializer|constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/)||Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))})};return e.forEach(t=>{r(n.prototype,t.prototype),r(n,t)}),n})},function(t,n){t.exports=e},function(t,e,n){
/*!
 * RentalContract class
 * Copyright(c) 2018 Pit.AI Technologies
 * LICENSE: GPLv3
 */
const r=n(0).BaseDeviseClient,a=1e6,s=1e6,c=1e18;t.exports=class extends r{constructor(t,e,n){super(t,e,n)}async _has_sufficient_funds(t,e,n){const r=await this._rental_contract.methods.getAllowance().call({from:t})/s;return n*this.total_incremental_usefulness()*e<=r}async get_client_address(t){const e=await this._rental_contract.methods.getClientForBeneficiary().call({from:t});if("0x0000000000000000000000000000000000000000"!==e)return e}async dvz_balance(){return await this._token_contract.methods.balanceOf(this.address).call({from:this.address})/s}async eth_balance(){return void 0===this.address?0:await this.web3.eth.getBalance(this.address)/c}async dvz_balance_escrow(){return await this._rental_contract.methods.getAllowance().call({from:this.address})/s}async get_eth_usd_rate(){let t=await this._rental_contract.methods.rateETHUSD().call();return(t=parseInt(t))/1e8}async get_usd_dvz_rate(){let t=await this._rental_contract.methods.RATE_USD_DVZ().call();return parseInt(t)}async get_eth_dvz_rate(){return await this.get_eth_usd_rate()*await this.get_usd_dvz_rate()}async rent_per_seat_current_term(){return await this._rental_contract.methods.getRentPerSeatCurrentTerm().call()/s}async indicative_rent_per_seat_next_term(){return await this._rental_contract.methods.getIndicativeRentPerSeatNextTerm().call()/s}async current_lease_term(){const t=await this._rental_contract.methods.getCurrentLeaseTerm().call();return this._lease_term_to_date_str(t)}_lease_term_to_date_str(t){if(0===t)return;let e=2018;for(;t>12;)e++,t-=12;return(++t).toString()+"/"+e.toString()}async price_per_bit_current_term(){return await this._rental_contract.methods.getPricePerBitCurrentTerm().call()/s}async indicative_price_per_bit_next_term(){return await this._rental_contract.methods.getIndicativePricePerBitNextTerm().call()/s}is_power_user(){return this._rental_contract.methods.isPowerUser().call({from:this.address})}beneficiary(){return void 0===this.address?Promise().resolve("0x0000000000000000000000000000000000000000"):this._rental_contract.methods.getBeneficiary().call({from:this.address})}async total_incremental_usefulness(){return await this._rental_contract.methods.getTotalIncrementalUsefulness().call()/a}async seats_available(){const t=await this._rental_contract.methods.getSeatsAvailable().call();return parseInt(t)}async current_term_seats(){const t=await this.get_client_address(this.address);return void 0===t?0:this._rental_contract.methods.getCurrentTermSeats().call({from:t})}async next_term_seats(){const t=await this.get_client_address(this.address);return void 0===t?0:this._rental_contract.methods.getNextTermSeats().call({from:t})}async client_summary(){let t;try{t=await this.get_client_summary(this.address)}catch(t){return void console.log("No client found for address %s",this.address)}return t}async get_all_leptons(){const t=await this._rental_contract.methods.getAllLeptons().call();await this._rental_contract.methods.getNumberOfLeptons().call();let e,n=[];for(let r=0;r<t[0].length;r++){const s=t[0][r],c=t[1][r];n.push({hash:s,previous_hash:e,incremental_usefulness:c/a}),e=s}return n}async get_all_clients(){const t=await this._rental_contract.methods.getAllClients().call();let e=[];for(let n=0;n<t.length;n++){const r=await this.get_client_summary(t[n]);e.push(r)}return e}async get_all_renters(){const t=await this._rental_contract.methods.getAllRenters().call();let e=[];for(let n=0;n<t.length;n++){const r=await this.get_client_summary(t[n]);e.push(r)}return e}async get_client_summary(t){const e=await this._rental_contract.methods.getClientSummary(t).call();let n={};return n.client=t,n.beneficiary=e[0],n.dvz_balance_escrow=e[1]/s,n.dvz_balance=e[2]/s,n.last_term_paid=this._lease_term_to_date_str(e[3]),n.power_user=e[4],n.historical_data_access=e[5],n.current_term_seats=e[6],n.indicative_next_term_seats=e[7],n}async get_all_bidders(t=!1){let e=[];const n=await this._rental_contract.methods.getAllBidders().call();for(let r=0;r<n[0].length;r++)"0x0000000000000000000000000000000000000000"!==n[0][r]&&(t&&!this._has_sufficient_funds(n[0][r],n[1][r],n[2][r]/s)||e.push({address:n[0][r],requested_seats:n[1][r],limit_price:n[2][r]/s}));return e}async get_owner_eth_balance(){const t=await this._rental_contract.methods.owner().call();return await this.get_eth_balance(t)}async get_escrow_wallet_address(){return await this._rental_contract.methods.escrowWallet().call()}async get_revenue_wallet_address(){return await this._rental_contract.methods.revenueWallet().call()}async balance_of_escrow_wallet(){const t=await this.get_escrow_wallet_address();return await this._token_contract.methods.balanceOf(t).call()/s}async balance_of_revenue_wallet(){const t=await this.get_revenue_wallet_address();return await this._token_contract.methods.balanceOf(t).call()/s}async get_all_implementations(){const t=await this._rental_contract.methods.getAllImplementations().call();return t[1].map((e,n)=>{let r={};return r.ver=parseInt(e),r.impl=t[0][n],r})}}}])});